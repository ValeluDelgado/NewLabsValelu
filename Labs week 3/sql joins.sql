USE sakila;

SELECT amount, return_date
FROM PAYMENT JOIN RENTAL
ON rental.rental_id=payment.rental_id;


SELECT amount, return_date
FROM PAYMENT JOIN RENTAL
USING (rental_id);

#1. List the number of films per category.


SELECT count(film_category.film_id) AS number_of_films, category.name
FROM film_category
JOIN category
ON film_category.category_id = category.category_id
GROUP BY category.name;



#2. Retrieve the store ID, city, and country for each store.

SELECT store_id, city, country
FROM store
JOIN address USING (address_id)
JOIN city USING (city_id)
JOIN country USING (country_id);



SELECT store_id, city, country
FROM country join city on country.country_id = city.country_id
join address on city.city_id = address.city_id
join store on address.address_id = store.address_id;

#3.Calculate the total revenue generated by each store in dollars.

SELECT s.store_id, SUM(amount) AS revenue
FROM staff s
LEFT JOIN payment p ON s.staff_id = p.staff_id
GROUP BY s.store_id;

SELECT store.store_id, SUM(payment.amount) AS total_revenue
FROM store JOIN staff ON store.store_id = staff.store_id
JOIN payment ON staff.staff_id = payment.staff_id
GROUP BY store.store_id;

#4. Determine the average running time of films for each category.
 
SELECT avg(film.length) as avg_running_time, category.name
FROM film_category JOIN film USING (film_id)
JOIN category USING (category_id)
GROUP BY  category.name;

#5. Identify the film categories with the longest average running time.

SELECT avg(film.length) as avg_running_time, category.name
FROM film_category JOIN film USING (film_id)
JOIN category USING (category_id)
GROUP BY  category.name
ORDER BY avg_running_time DESC;

#6 Display the top 10 most frequently rented movies in descending order.
SELECT film.film_id, film.title, COUNT(*) AS rental_count
FROM film
JOIN inventory USING (film_id)
JOIN rental USING (inventory_id)
GROUP BY film.film_id, film.title
ORDER BY rental_count DESC
LIMIT 10;


#7Determine if "Academy Dinosaur" can be rented from Store 1.
SELECT IF(COUNT(*) > 0, 'Yes', 'No') AS can_be_rented
FROM film
JOIN inventory USING (film_id)
WHERE film.title LIKE '%Academy Dinosaur%'
  AND inventory.store_id = 1;


